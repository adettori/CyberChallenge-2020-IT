#!/usr/bin/env python

vm_redir_table = [0xfffffa8d, 0x97fffffa, 0xfa97ffff, 0xfffa97ff, 0xfffffa97, 0xe0fffffa, 0xfae0ffff, 0xfffae0ff, 0xfffffae0, 0xdfffffa, 0xfb0dffff, 0xfffb0dff, 0xfffffb0d, 0x4afffffb, 0xfb4affff, 0xfffb4aff, 0xfffffb4a, 0x89fffffb, 0xfb89ffff, 0xfffb89ff, 0xfffffb89, 0xd0fffffb, 0xfbd0ffff, 0xfffbd0ff, 0xfffffbd0, 0x4fffffb, 0xfc04ffff, 0xfffc04ff, 0xfffffc04, 0x59fffffc, 0xfc59ffff, 0xfffc59ff, 0xfffffc59, 0xaefffffc, 0xfcaeffff, 0xfffcaeff, 0xfffffcae, 0x47fffffc, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x47fffffa, 0xfa47ffff, 0xfffa47ff, 0xfffffa47, 0x6fffffa, 0xfd06ffff, 0xfffd06ff, 0xfffffd06, 0x3cfffffd, 0xfd3cffff, 0xfffd3cff, 0xfffffd3c, 0x9afffffd, 0xfd9affff, 0xfffd9aff, 0xfffffd9a, 0xbcfffffd, 0xfdbcffff, 0xfffdbcff, 0xfffffdbc, 0x5fffffd, 0xfe05ffff, 0xfffe05ff, 0xfffffe05, 0xfffffe, 0xffff, 0xff]

vm_program_1 = [0x31, 0x80, 0x63, 0x32, 0x32, 0x64, 0x80, 0x33, 0x34, 0x12, 0x36, 0x1, 0x38, 0x32, 0x32, 0x39, 0x34, 0x3, 0x36, 0x23, 0x39, 0x34, 0x1b, 0x36, 0x0, 0x64, 0x0, 0x36, 0x0, 0x64, 0x80, 0x30, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6d, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x72, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6d, 0x59, 0x71, 0x33, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x72, 0x34, 0x75, 0x37, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6d, 0x59, 0x71, 0x33, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x72, 0x34, 0x75, 0x37, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x59, 0x71, 0x33, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x34, 0x75, 0x37, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x0]

vm_program_2 = [0x31, 0x80, 0x32, 0x32, 0x64, 0x80, 0x33, 0x32, 0x34, 0x28, 0x35, 0x36, 0x63, 0x37, 0x36, 0x98, 0x38, 0x61, 0x62, 0x31, 0x80, 0x36, 0xa, 0x38, 0x65, 0x39, 0x34, 0x20, 0x36, 0x0, 0x64, 0x0, 0x36, 0x1, 0x38, 0x32, 0x32, 0x37, 0x34, 0x2, 0x30, 0x2a, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6d, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x72, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x44, 0x28, 0x47, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6d, 0x59, 0x71, 0x33, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x42, 0x26, 0x45, 0x29, 0x48, 0x40, 0x4d, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x72, 0x34, 0x75, 0x37, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x46, 0x2d, 0x4a, 0x61, 0x4e, 0x64, 0x52, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4b, 0x62, 0x50, 0x65, 0x53, 0x68, 0x56, 0x6d, 0x59, 0x71, 0x33, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x51, 0x66, 0x54, 0x6a, 0x57, 0x6e, 0x5a, 0x72, 0x34, 0x75, 0x37, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x55, 0x6b, 0x58, 0x70, 0x32, 0x73, 0x35, 0x76, 0x38, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x59, 0x71, 0x33, 0x74, 0x36, 0x77, 0x39, 0x7a, 0x24, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x34, 0x75, 0x37, 0x78, 0x21, 0x41, 0x25, 0x44, 0x2a, 0x47, 0x2d, 0x4b, 0x61, 0x50, 0x64, 0x53, 0x67, 0x56, 0x6b, 0x59, 0x70, 0x33, 0x73, 0x36, 0x76, 0x39, 0x79, 0x2f, 0x42, 0x3f, 0x45, 0x28, 0x48, 0x2b, 0x4d, 0x62, 0x51, 0x65, 0x54, 0x68, 0x57, 0x6d, 0x5a, 0x71, 0x34, 0x74, 0x37, 0x77, 0x21, 0x7a, 0x25, 0x43, 0x26, 0x46, 0x29, 0x4a, 0x40, 0x4e, 0x63, 0x52, 0x66, 0x55, 0x6a, 0x58, 0x6e, 0x32, 0x72, 0x35, 0x75, 0x38, 0x78, 0x2f, 0x41, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

#Usare ctypes in situazioni delicate
from ctypes import *
import sys

def vm_main(vm_code):

    redir_table_addr = 0x400e38

    exit_addr = 0x4008c5
    copy1_addr = 0x4008cf
    dup_data_addr = 0x400918
    copy_password_char_addr = 0x400945
    jmp_if_mem2_not_zero_addr = 0x400982
    dec_mem2_ind_addr = 0x40098b
    concat_brutta_addr = 0x4009c1
    write_in_mem2_addr = 0x400a08
    xor_addr = 0x400a3c
    add_addr = 0x400a91
    sub_addr = 0x400ae6
    not_addr = 0x400b3e
    fail_check_addr = 0x400b74
    inc_bss_data0_addr = 0x400bbe
    strcpy_flag_addr = 0x400bd2
    load_to_flag_check_addr = 0x400bf4
    store_from_flag_check = 0x400c3d

    system_args = dict()

    pc = c_int(0)

    while(True):

        cur_code = c_byte(vm_code[pc.value])
        pc = c_int(pc.value + 1)

        #print(cur_code.value)
        cur_code = c_int(cur_code.value - 0x30)

        if(cur_code.value == 0x35):
            continue

        ind_redir_t = cur_code.value*0x4

        redir_val1 = vm_redir_table[ind_redir_t]
        fun_addr = c_int(redir_val1 + redir_table_addr)

        #print(hex(fun_addr.value))

        if(fun_addr.value == exit_addr):
            print("exit")
            break
            pass
        elif(fun_addr.value == copy1_addr):
            print("copy1 " + str(vm_code[pc.value]))
            pc = c_int(pc.value+1)
        elif(fun_addr.value == dup_data_addr):
            print("dup_data")
            pass
        elif(fun_addr.value == copy_password_char_addr):
            print("copy_pass_char")
            pass
        elif(fun_addr.value == jmp_if_mem2_not_zero_addr):
            print("jmp_if_mem2_not_zero " + str(vm_code[pc.value]))
            pc = c_int(pc.value+1)
            pass
        elif(fun_addr.value == dec_mem2_ind_addr):
            print("dec_mem2_ind")
            pass
        elif(fun_addr.value == concat_brutta_addr):
            print("concat_brutta")
            pass
        elif(fun_addr.value == write_in_mem2_addr):
            print("write_in_mem2 " + str(vm_code[pc.value]))
            pc = c_int(pc.value+1)
            pass
        elif(fun_addr.value == xor_addr):
            print("xor")
            pass
        elif(fun_addr.value == add_addr):
            print("add")
            pass
        elif(fun_addr.value == sub_addr):
            print("sub")
            pass
        elif(fun_addr.value == not_addr):
            print("not")
            pass
        elif(fun_addr.value == fail_check_addr):
            print("fail_check")
            break
            pass
        elif(fun_addr.value == inc_bss_data0_addr):
            print("inc_bss_data0")
            pass
        elif(fun_addr.value == strcpy_flag_addr):
            print("strcpy")
            pass
        elif(fun_addr.value == load_to_flag_check_addr):
            pc = c_int(pc.value+1)
            pass
        elif(fun_addr.value == store_from_flag_check):
            print("store")
            pass
        else:
            print("ERROR!")
            sys.exit(1)

print("Program 1:")
vm_main(vm_program_1)
print("Program 2:")
vm_main(vm_program_2)
